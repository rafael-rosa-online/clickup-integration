name: Update ClickUp Data - Complete Collection

on:
  schedule:
    # Coleta básica a cada 2 horas
    - cron: '0 */2 * * *'
  
  # Coleta completa 1x por dia às 6h (3h horário de Brasília)
  schedule:
    - cron: '0 6 * * *'
  
  # Permite execução manual
  workflow_dispatch:
    inputs:
      collection_type:
        description: 'Tipo de coleta'
        required: true
        default: 'complete'
        type: choice
        options:
        - basic
        - complete
  
  # Executa na primeira vez e sempre que fizer push
  push:
    branches: [ main ]

# Adicionar permissões necessárias
permissions:
  contents: write
  actions: read

jobs:
  update-clickup-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Test Node.js environment
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Current directory: $(pwd)"
        echo "Files in directory:"
        ls -la
        
    - name: Determine collection type
      id: collection_type
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "type=${{ github.event.inputs.collection_type }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.schedule }}" == "0 6 * * *" ]]; then
          echo "type=complete" >> $GITHUB_OUTPUT
        else
          echo "type=basic" >> $GITHUB_OUTPUT
        fi
        
    - name: Run Basic ClickUp Collection
      if: steps.collection_type.outputs.type == 'basic'
      run: |
        echo "🔄 Executando coleta básica..."
        node fetch-clickup-data.js
        
    - name: Run Complete ClickUp Collection
      if: steps.collection_type.outputs.type == 'complete'
      run: |
        echo "🚀 Executando coleta COMPLETA (comentários, documentos, etc)..."
        echo "⚠️ Esta coleta pode demorar 5-10 minutos..."
        timeout 20m node fetch-clickup-enhanced.js || {
          echo "❌ Timeout na coleta completa, executando básica como fallback"
          node fetch-clickup-data.js
        }
      
    - name: Check if data was created
      run: |
        echo "📊 Verificando arquivos criados..."
        
        # Verificar arquivo básico
        if [ -f clickup-summary.json ]; then
          echo "✅ clickup-summary.json criado"
          echo "   Tamanho: $(stat -c%s clickup-summary.json) bytes"
        else
          echo "❌ clickup-summary.json não encontrado"
        fi
        
        # Verificar arquivo completo (se existe)
        if [ -f clickup-enhanced-summary.json ]; then
          echo "✅ clickup-enhanced-summary.json criado"
          echo "   Tamanho: $(stat -c%s clickup-enhanced-summary.json) bytes"
          echo "📊 Preview do resumo expandido:"
          head -20 clickup-enhanced-summary.json
        fi
        
        if [ -f clickup-data-complete.json ]; then
          echo "✅ clickup-data-complete.json criado"
          echo "   Tamanho: $(stat -c%s clickup-data-complete.json) bytes"
        fi
        
        # Verificar se pelo menos um arquivo foi criado
        if [ ! -f clickup-summary.json ] && [ ! -f clickup-enhanced-summary.json ]; then
          echo "❌ Nenhum arquivo de dados foi criado"
          exit 1
        fi
      
    - name: Commit and push updated data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Adicionar todos os arquivos possíveis
        git add -A
        
        if git diff --staged --quiet; then
          echo "📭 Nenhuma mudança para commitar"
        else
          # Determinar tipo de commit baseado nos arquivos
          if [ -f clickup-enhanced-summary.json ]; then
            COMMIT_TYPE="🚀 Dados COMPLETOS"
            FILE_COUNT=$(ls clickup-*.json 2>/dev/null | wc -l)
          else
            COMMIT_TYPE="🔄 Dados básicos"
            FILE_COUNT=$(ls clickup-summary.json 2>/dev/null | wc -l)
          fi
          
          git commit -m "${COMMIT_TYPE} atualizados - $(date '+%Y-%m-%d %H:%M:%S') - ${FILE_COUNT} arquivos"
          git push
          
          echo "✅ Dados commitados com sucesso!"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}